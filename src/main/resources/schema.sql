CREATE TABLE IF NOT EXISTS genres (
	genre_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	genre_name varchar NOT NULL
);

CREATE TABLE IF NOT EXISTS mpa (
	mpa_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	mpa_name varchar NOT NULL,
	mpa_min_age int DEFAULT 0 CHECK (mpa_min_age >= 0)
);

CREATE TABLE IF NOT EXISTS films (
	film_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	film_name varchar NOT NULL CHECK (film_name <> ''),
	film_description varchar(200) CHECK (film_description <> ''),
	film_release_date date NOT NULL CONSTRAINT films_release_date CHECK (film_release_date > '1895-12-28'),
	film_duration int CHECK (film_duration > 0),
	film_mpa_id int REFERENCES mpa(mpa_id)
);

CREATE TABLE IF NOT EXISTS films_genres (
	film_genre_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	film_id int NOT NULL REFERENCES films(film_id) ON DELETE CASCADE,
	genre_id int NOT NULL REFERENCES genres(genre_id)
);

CREATE TABLE IF NOT EXISTS users (
	user_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	user_email varchar NOT NULL CHECK (user_email <> '') UNIQUE,
	user_login varchar NOT NULL CHECK (user_login <> '') UNIQUE,
	user_name varchar,
	user_birthday date NOT NULL CONSTRAINT users_check_birthday CHECK (user_birthday < CURRENT_DATE())
);

CREATE TABLE IF NOT EXISTS friendships (
	friendship_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	user_id int NOT NULL CONSTRAINT friendships_user_id REFERENCES users(user_id) ON DELETE CASCADE,
	friend_id int NOT NULL CONSTRAINT friendships_friend_id REFERENCES users(user_id),
	friendship_confirmed boolean DEFAULT FALSE
);

CREATE TABLE IF NOT EXISTS film_likes (
	film_like_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	film_id int NOT NULL CONSTRAINT film_like_film_id_fk REFERENCES films(film_id) ON DELETE CASCADE,
	user_id int NOT NULL CONSTRAINT film_like_user_id_fk REFERENCES users(user_id) ON DELETE CASCADE
);